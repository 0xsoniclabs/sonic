// Code generated by MockGen. DO NOT EDIT.
// Source: evm.go
//
// Generated by this command:
//
//	mockgen -source=evm.go -destination=evm_mock.go -package=evmcore
//

// Package evmcore is a generated GoMock package.
package evmcore

import (
	reflect "reflect"

	idx "github.com/Fantom-foundation/lachesis-base/inter/idx"
	common "github.com/ethereum/go-ethereum/common"
	gomock "go.uber.org/mock/gomock"
)

// MockBlockHashProvider is a mock of BlockHashProvider interface.
type MockBlockHashProvider struct {
	ctrl     *gomock.Controller
	recorder *MockBlockHashProviderMockRecorder
}

// MockBlockHashProviderMockRecorder is the mock recorder for MockBlockHashProvider.
type MockBlockHashProviderMockRecorder struct {
	mock *MockBlockHashProvider
}

// NewMockBlockHashProvider creates a new mock instance.
func NewMockBlockHashProvider(ctrl *gomock.Controller) *MockBlockHashProvider {
	mock := &MockBlockHashProvider{ctrl: ctrl}
	mock.recorder = &MockBlockHashProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBlockHashProvider) EXPECT() *MockBlockHashProviderMockRecorder {
	return m.recorder
}

// GetBlockHash mocks base method.
func (m *MockBlockHashProvider) GetBlockHash(arg0 idx.Block) common.Hash {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlockHash", arg0)
	ret0, _ := ret[0].(common.Hash)
	return ret0
}

// GetBlockHash indicates an expected call of GetBlockHash.
func (mr *MockBlockHashProviderMockRecorder) GetBlockHash(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlockHash", reflect.TypeOf((*MockBlockHashProvider)(nil).GetBlockHash), arg0)
}
