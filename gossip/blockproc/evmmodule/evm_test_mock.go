// Code generated by MockGen. DO NOT EDIT.
// Source: evm_test.go
//
// Generated by this command:
//
//	mockgen -source=evm_test.go -destination=evm_test_mock.go -package=evmmodule
//

// Package evmmodule is a generated GoMock package.
package evmmodule

import (
	reflect "reflect"

	types "github.com/ethereum/go-ethereum/core/types"
	gomock "go.uber.org/mock/gomock"
)

// Mock_onNewLog is a mock of _onNewLog interface.
type Mock_onNewLog struct {
	ctrl     *gomock.Controller
	recorder *Mock_onNewLogMockRecorder
	isgomock struct{}
}

// Mock_onNewLogMockRecorder is the mock recorder for Mock_onNewLog.
type Mock_onNewLogMockRecorder struct {
	mock *Mock_onNewLog
}

// NewMock_onNewLog creates a new mock instance.
func NewMock_onNewLog(ctrl *gomock.Controller) *Mock_onNewLog {
	mock := &Mock_onNewLog{ctrl: ctrl}
	mock.recorder = &Mock_onNewLogMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mock_onNewLog) EXPECT() *Mock_onNewLogMockRecorder {
	return m.recorder
}

// OnNewLog mocks base method.
func (m *Mock_onNewLog) OnNewLog(arg0 *types.Log) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "OnNewLog", arg0)
}

// OnNewLog indicates an expected call of OnNewLog.
func (mr *Mock_onNewLogMockRecorder) OnNewLog(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OnNewLog", reflect.TypeOf((*Mock_onNewLog)(nil).OnNewLog), arg0)
}
