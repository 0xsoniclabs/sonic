// Code generated by MockGen. DO NOT EDIT.
// Source: service.go
//
// Generated by this command:
//
//	mockgen -source=service.go -package=gossip -destination=service_mock.go
//

// Package gossip is a generated GoMock package.
package gossip

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockArchiveBlockHeightSource is a mock of ArchiveBlockHeightSource interface.
type MockArchiveBlockHeightSource struct {
	ctrl     *gomock.Controller
	recorder *MockArchiveBlockHeightSourceMockRecorder
}

// MockArchiveBlockHeightSourceMockRecorder is the mock recorder for MockArchiveBlockHeightSource.
type MockArchiveBlockHeightSourceMockRecorder struct {
	mock *MockArchiveBlockHeightSource
}

// NewMockArchiveBlockHeightSource creates a new mock instance.
func NewMockArchiveBlockHeightSource(ctrl *gomock.Controller) *MockArchiveBlockHeightSource {
	mock := &MockArchiveBlockHeightSource{ctrl: ctrl}
	mock.recorder = &MockArchiveBlockHeightSourceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockArchiveBlockHeightSource) EXPECT() *MockArchiveBlockHeightSourceMockRecorder {
	return m.recorder
}

// GetArchiveBlockHeight mocks base method.
func (m *MockArchiveBlockHeightSource) GetArchiveBlockHeight() (uint64, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetArchiveBlockHeight")
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetArchiveBlockHeight indicates an expected call of GetArchiveBlockHeight.
func (mr *MockArchiveBlockHeightSourceMockRecorder) GetArchiveBlockHeight() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetArchiveBlockHeight", reflect.TypeOf((*MockArchiveBlockHeightSource)(nil).GetArchiveBlockHeight))
}
