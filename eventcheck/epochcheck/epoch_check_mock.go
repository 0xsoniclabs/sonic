// Code generated by MockGen. DO NOT EDIT.
// Source: epoch_check.go
//
// Generated by this command:
//
//	mockgen -source=epoch_check.go -destination=epoch_check_mock.go -package=epochcheck
//

// Package epochcheck is a generated GoMock package.
package epochcheck

import (
	reflect "reflect"

	opera "github.com/0xsoniclabs/sonic/opera"
	idx "github.com/Fantom-foundation/lachesis-base/inter/idx"
	pos "github.com/Fantom-foundation/lachesis-base/inter/pos"
	gomock "go.uber.org/mock/gomock"
)

// MockReader is a mock of Reader interface.
type MockReader struct {
	ctrl     *gomock.Controller
	recorder *MockReaderMockRecorder
	isgomock struct{}
}

// MockReaderMockRecorder is the mock recorder for MockReader.
type MockReaderMockRecorder struct {
	mock *MockReader
}

// NewMockReader creates a new mock instance.
func NewMockReader(ctrl *gomock.Controller) *MockReader {
	mock := &MockReader{ctrl: ctrl}
	mock.recorder = &MockReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReader) EXPECT() *MockReaderMockRecorder {
	return m.recorder
}

// GetEpochRules mocks base method.
func (m *MockReader) GetEpochRules() (opera.Rules, idx.Epoch) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEpochRules")
	ret0, _ := ret[0].(opera.Rules)
	ret1, _ := ret[1].(idx.Epoch)
	return ret0, ret1
}

// GetEpochRules indicates an expected call of GetEpochRules.
func (mr *MockReaderMockRecorder) GetEpochRules() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEpochRules", reflect.TypeOf((*MockReader)(nil).GetEpochRules))
}

// GetEpochValidators mocks base method.
func (m *MockReader) GetEpochValidators() (*pos.Validators, idx.Epoch) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEpochValidators")
	ret0, _ := ret[0].(*pos.Validators)
	ret1, _ := ret[1].(idx.Epoch)
	return ret0, ret1
}

// GetEpochValidators indicates an expected call of GetEpochValidators.
func (mr *MockReaderMockRecorder) GetEpochValidators() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEpochValidators", reflect.TypeOf((*MockReader)(nil).GetEpochValidators))
}
