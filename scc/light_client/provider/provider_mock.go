// Code generated by MockGen. DO NOT EDIT.
// Source: provider.go

// Package provider is a generated GoMock package.
package provider

import (
	reflect "reflect"

	scc "github.com/0xsoniclabs/sonic/scc"
	cert "github.com/0xsoniclabs/sonic/scc/cert"
	idx "github.com/Fantom-foundation/lachesis-base/inter/idx"
	gomock "github.com/golang/mock/gomock"
)

// MockProvider is a mock of Provider interface.
type MockProvider struct {
	ctrl     *gomock.Controller
	recorder *MockProviderMockRecorder
}

// MockProviderMockRecorder is the mock recorder for MockProvider.
type MockProviderMockRecorder struct {
	mock *MockProvider
}

// NewMockProvider creates a new mock instance.
func NewMockProvider(ctrl *gomock.Controller) *MockProvider {
	mock := &MockProvider{ctrl: ctrl}
	mock.recorder = &MockProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProvider) EXPECT() *MockProviderMockRecorder {
	return m.recorder
}

// GetBlockCertificate mocks base method.
func (m *MockProvider) GetBlockCertificate(first idx.Block, maxResults uint64) ([]cert.BlockCertificate, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlockCertificate", first, maxResults)
	ret0, _ := ret[0].([]cert.BlockCertificate)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlockCertificate indicates an expected call of GetBlockCertificate.
func (mr *MockProviderMockRecorder) GetBlockCertificate(first, maxResults interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlockCertificate", reflect.TypeOf((*MockProvider)(nil).GetBlockCertificate), first, maxResults)
}

// GetCommitteeCertificates mocks base method.
func (m *MockProvider) GetCommitteeCertificates(first scc.Period, maxResults uint64) ([]cert.CommitteeCertificate, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCommitteeCertificates", first, maxResults)
	ret0, _ := ret[0].([]cert.CommitteeCertificate)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCommitteeCertificates indicates an expected call of GetCommitteeCertificates.
func (mr *MockProviderMockRecorder) GetCommitteeCertificates(first, maxResults interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCommitteeCertificates", reflect.TypeOf((*MockProvider)(nil).GetCommitteeCertificates), first, maxResults)
}
